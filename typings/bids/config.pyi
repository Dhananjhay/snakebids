"""
This type stub file was generated by pyright.
"""

""" Utilities for manipulating package-level settings. """
__all__ = ["set_option", "set_options", "get_option"]
_config_name = ...
conf_path = ...
_default_settings = ...

def set_option(key, value):  # -> None:
    """Set a package-wide option.

    Args:
        key (str): The name of the option to set.
        value (object): The new value of the option.
    """
    ...

def set_options(**kwargs):  # -> None:
    """Set multiple package-wide options.

    Args:
        kwargs: Keyword arguments to pass onto set_option().
    """
    ...

def get_option(key):  # -> dict[str, str] | bool:
    """Retrieve the current value of a package-wide option.

    Args:
        key (str): The name of the option to retrieve.

    """
    ...

def from_file(filenames, error_on_missing=...):  # -> None:
    """Load package-wide settings from specified file(s).

    Args:
        filenames (str, list): Filename or list of filenames containing JSON
            dictionary of settings.
        error_on_missing (bool): If True, raises an error if a file doesn't
            exist.
    """
    ...

def reset_options(update_from_file=...):  # -> None:
    """Reset all options to the package defaults.

    Args:
        update_from_file (bool): If True, re-applies any config files found in
            standard locations.
    """
    ...

_settings = ...
